// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package http represents the imported interface "wasm-operator:operator/http".
package http

import (
	"go.bytecodealliance.org/cm"
)

// Method represents the enum "wasm-operator:operator/http#method".
//
//	enum method {
//		get,
//		post,
//		put,
//		delete,
//		patch
//	}
type Method uint8

const (
	MethodGet Method = iota
	MethodPost
	MethodPut
	MethodDelete
	MethodPatch
)

var _MethodStrings = [5]string{
	"get",
	"post",
	"put",
	"delete",
	"patch",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e Method) String() string {
	return _MethodStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e Method) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *Method) UnmarshalText(text []byte) error {
	return _MethodUnmarshalCase(e, text)
}

var _MethodUnmarshalCase = cm.CaseUnmarshaler[Method](_MethodStrings[:])

// Header represents the record "wasm-operator:operator/http#header".
//
//	record header {
//		name: string,
//		value: string,
//	}
type Header struct {
	_     cm.HostLayout `json:"-"`
	Name  string        `json:"name"`
	Value string        `json:"value"`
}

// Request represents the record "wasm-operator:operator/http#request".
//
//	record request {
//		method: method,
//		uri: string,
//		headers: list<header>,
//		body: list<u8>,
//	}
type Request struct {
	_       cm.HostLayout   `json:"-"`
	Method  Method          `json:"method"`
	URI     string          `json:"uri"`
	Headers cm.List[Header] `json:"headers"`
	Body    cm.List[uint8]  `json:"body"`
}

// Response represents the record "wasm-operator:operator/http#response".
//
//	record response {
//		status: u16,
//		headers: list<header>,
//		body: list<u8>,
//	}
type Response struct {
	_       cm.HostLayout   `json:"-"`
	Status  uint16          `json:"status"`
	Headers cm.List[Header] `json:"headers"`
	Body    cm.List[uint8]  `json:"body"`
}
