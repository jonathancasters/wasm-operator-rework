// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package timezone represents the imported interface "wasi:clocks/timezone@0.2.6".
package timezone

import (
	"go.bytecodealliance.org/cm"
	wallclock "ring-operator/internal/wasi/clocks/wall-clock"
)

// DateTime represents the type alias "wasi:clocks/timezone@0.2.6#datetime".
//
// See [wallclock.DateTime] for more information.
type DateTime = wallclock.DateTime

// TimezoneDisplay represents the record "wasi:clocks/timezone@0.2.6#timezone-display".
//
//	record timezone-display {
//		utc-offset: s32,
//		name: string,
//		in-daylight-saving-time: bool,
//	}
type TimezoneDisplay struct {
	_                    cm.HostLayout `json:"-"`
	UtcOffset            int32         `json:"utc-offset"`
	Name                 string        `json:"name"`
	InDaylightSavingTime bool          `json:"in-daylight-saving-time"`
}

// Display represents the imported function "display".
//
//	display: func(when: datetime) -> timezone-display
//
//go:nosplit
func Display(when DateTime) (result TimezoneDisplay) {
	when0, when1 := lower_DateTime(when)
	wasmimport_Display((uint64)(when0), (uint32)(when1), &result)
	return
}

// UtcOffset represents the imported function "utc-offset".
//
//	utc-offset: func(when: datetime) -> s32
//
//go:nosplit
func UtcOffset(when DateTime) (result int32) {
	when0, when1 := lower_DateTime(when)
	result0 := wasmimport_UtcOffset((uint64)(when0), (uint32)(when1))
	result = (int32)((uint32)(result0))
	return
}
