// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package kubernetes represents the imported interface "local:operator/kubernetes@0.2.0".
package kubernetes

import (
	"go.bytecodealliance.org/cm"
	"ring-operator-go/internal/local/operator/types"
)

// LogLevel represents the type alias "local:operator/kubernetes@0.2.0#log-level".
//
// See [types.LogLevel] for more information.
type LogLevel = types.LogLevel

// Log represents the imported function "log".
//
//	log: func(level: log-level, message: string)
//
//go:nosplit
func Log(level LogLevel, message string) {
	level0 := (uint32)(level)
	message0, message1 := cm.LowerString(message)
	wasmimport_Log((uint32)(level0), (*uint8)(message0), (uint32)(message1))
	return
}

// GetResource represents the imported function "get-resource".
//
//	get-resource: func(kind: string, name: string, namespace: string) -> result<string,
//	string>
//
//go:nosplit
func GetResource(kind string, name string, namespace string) (result cm.Result[string, string, string]) {
	kind0, kind1 := cm.LowerString(kind)
	name0, name1 := cm.LowerString(name)
	namespace0, namespace1 := cm.LowerString(namespace)
	wasmimport_GetResource((*uint8)(kind0), (uint32)(kind1), (*uint8)(name0), (uint32)(name1), (*uint8)(namespace0), (uint32)(namespace1), &result)
	return
}

// CreateResource represents the imported function "create-resource".
//
//	create-resource: func(kind: string, namespace: string, resource-json: string) ->
//	result<_, string>
//
//go:nosplit
func CreateResource(kind string, namespace string, resourceJSON string) (result cm.Result[string, struct{}, string]) {
	kind0, kind1 := cm.LowerString(kind)
	namespace0, namespace1 := cm.LowerString(namespace)
	resourceJson0, resourceJson1 := cm.LowerString(resourceJSON)
	wasmimport_CreateResource((*uint8)(kind0), (uint32)(kind1), (*uint8)(namespace0), (uint32)(namespace1), (*uint8)(resourceJson0), (uint32)(resourceJson1), &result)
	return
}

// UpdateResource represents the imported function "update-resource".
//
//	update-resource: func(kind: string, name: string, namespace: string, resource-json:
//	string) -> result<_, string>
//
//go:nosplit
func UpdateResource(kind string, name string, namespace string, resourceJSON string) (result cm.Result[string, struct{}, string]) {
	kind0, kind1 := cm.LowerString(kind)
	name0, name1 := cm.LowerString(name)
	namespace0, namespace1 := cm.LowerString(namespace)
	resourceJson0, resourceJson1 := cm.LowerString(resourceJSON)
	wasmimport_UpdateResource((*uint8)(kind0), (uint32)(kind1), (*uint8)(name0), (uint32)(name1), (*uint8)(namespace0), (uint32)(namespace1), (*uint8)(resourceJson0), (uint32)(resourceJson1), &result)
	return
}

// DeleteResource represents the imported function "delete-resource".
//
//	delete-resource: func(kind: string, name: string, namespace: string) -> result<_,
//	string>
//
//go:nosplit
func DeleteResource(kind string, name string, namespace string) (result cm.Result[string, struct{}, string]) {
	kind0, kind1 := cm.LowerString(kind)
	name0, name1 := cm.LowerString(name)
	namespace0, namespace1 := cm.LowerString(namespace)
	wasmimport_DeleteResource((*uint8)(kind0), (uint32)(kind1), (*uint8)(name0), (uint32)(name1), (*uint8)(namespace0), (uint32)(namespace1), &result)
	return
}
